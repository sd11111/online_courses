import { useState, useEffect, useCallback } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';
import Layout from '../../components/Layout';
import { useAuthStore } from '../../store/auth';
import styles from '../../styles/StudentDashboard.module.css';

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
type Enrollment = {
  id: string;
  status: 'PENDING' | 'APPROVED' | 'COMPLETED';
  createdAt: string;
  course: {
    id: string;
    title: string;
    imageUrl: string | null;
    creator: {
      name: string;
    };
    _count: {
      lessons: number;
    };
  };
};

export default function StudentDashboard() {
  const router = useRouter();
  const { user, isLoading: authLoading } = useAuthStore();
  
  const [enrollments, setEnrollments] = useState<Enrollment[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    if (!authLoading && (!user || user.role !== 'STUDENT')) {
      router.push('/login');
    }
  }, [user, authLoading, router]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–µ–π —Å—Ç—É–¥–µ–Ω—Ç–∞ - –º–µ–º–æ–∏–∑–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å useCallback
  const fetchEnrollments = useCallback(async () => {
    if (!user) return;
    
    setIsLoading(true);
    setError(null);

    try {
      console.log('Fetching enrollments...');
      const response = await fetch('/api/student/enrollments');
      
      if (!response.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ');
      }

      const data = await response.json();
      setEnrollments(data.enrollments);
    } catch (error) {
      console.error('Error fetching enrollments:', error);
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö');
    } finally {
      setIsLoading(false);
    }
  }, [user]);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º useEffect —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∏ –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏
    if (user && !authLoading) {
      fetchEnrollments();
    }
  }, [fetchEnrollments, authLoading, user]);

  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏, –ø–æ–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è
  if (authLoading) {
    return <div>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...</div>;
  }

  // –†–µ–¥–∏—Ä–µ–∫—Ç –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä–≤–æ–≥–æ useEffect
  if (!user || user.role !== 'STUDENT') {
    return <div>–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...</div>;
  }

  const approvedEnrollments = enrollments.filter(e => e.status === 'APPROVED');
  const pendingEnrollments = enrollments.filter(e => e.status === 'PENDING');
  const completedEnrollments = enrollments.filter(e => e.status === 'COMPLETED');

  return (
    <Layout>
      <div className={styles.container}>
        <div className={styles.header}>
          <h1>–ö–∞–±–∏–Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞</h1>
          <div className={styles.stats}>
            <div className={styles.statCard}>
              <h3>–ê–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã</h3>
              <span className={styles.statValue}>{approvedEnrollments.length}</span>
            </div>
            <div className={styles.statCard}>
              <h3>–û–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</h3>
              <span className={styles.statValue}>{pendingEnrollments.length}</span>
            </div>
            <div className={styles.statCard}>
              <h3>–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã</h3>
              <span className={styles.statValue}>{completedEnrollments.length}</span>
            </div>
          </div>
        </div>

        {error && <div className={styles.error}>{error}</div>}

        {isLoading ? (
          <div className={styles.loading}>–ó–∞–≥—Ä—É–∑–∫–∞ –∫—É—Ä—Å–æ–≤...</div>
        ) : (
          <>
            {approvedEnrollments.length > 0 && (
              <div className={styles.section}>
                <h2>–ú–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã</h2>
                <div className={styles.courseGrid}>
                  {approvedEnrollments.map((enrollment) => (
                    <div key={enrollment.id} className={styles.courseCard}>
                      <div className={styles.courseImage}>
                        {enrollment.course.imageUrl ? (
                          <img src={enrollment.course.imageUrl} alt={enrollment.course.title} />
                        ) : (
                          <div className={styles.placeholderImage}>üìö</div>
                        )}
                      </div>
                      <div className={styles.courseContent}>
                        <h3 className={styles.courseTitle}>
                          <Link href={`/student/courses/${enrollment.course.id}`}>
                            {enrollment.course.title}
                          </Link>
                        </h3>
                        <p className={styles.courseTeacher}>
                          –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {enrollment.course.creator.name}
                        </p>
                        <p className={styles.courseLessons}>
                          {enrollment.course._count.lessons} —É—Ä–æ–∫–æ–≤
                        </p>
                        <Link href={`/student/courses/${enrollment.course.id}`} className={styles.continueButton}>
                          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ
                        </Link>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {pendingEnrollments.length > 0 && (
              <div className={styles.section}>
                <h2>–ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏</h2>
                <div className={styles.courseGrid}>
                  {pendingEnrollments.map((enrollment) => (
                    <div key={enrollment.id} className={styles.courseCard}>
                      <div className={styles.courseImage}>
                        {enrollment.course.imageUrl ? (
                          <img src={enrollment.course.imageUrl} alt={enrollment.course.title} />
                        ) : (
                          <div className={styles.placeholderImage}>üìö</div>
                        )}
                      </div>
                      <div className={styles.courseContent}>
                        <h3 className={styles.courseTitle}>
                          <Link href={`/courses/${enrollment.course.id}`}>
                            {enrollment.course.title}
                          </Link>
                        </h3>
                        <p className={styles.courseTeacher}>
                          –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {enrollment.course.creator.name}
                        </p>
                        <div className={styles.pendingBadge}>
                          –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏
                        </div>
                        <span className={styles.enrollDate}>
                          –ü–æ–¥–∞–Ω–∞: {new Date(enrollment.createdAt).toLocaleDateString()}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {completedEnrollments.length > 0 && (
              <div className={styles.section}>
                <h2>–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∫—É—Ä—Å—ã</h2>
                <div className={styles.courseGrid}>
                  {completedEnrollments.map((enrollment) => (
                    <div key={enrollment.id} className={styles.courseCard}>
                      <div className={styles.courseImage}>
                        {enrollment.course.imageUrl ? (
                          <img src={enrollment.course.imageUrl} alt={enrollment.course.title} />
                        ) : (
                          <div className={styles.placeholderImage}>üìö</div>
                        )}
                      </div>
                      <div className={styles.courseContent}>
                        <h3 className={styles.courseTitle}>
                          <Link href={`/student/courses/${enrollment.course.id}`}>
                            {enrollment.course.title}
                          </Link>
                        </h3>
                        <p className={styles.courseTeacher}>
                          –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {enrollment.course.creator.name}
                        </p>
                        <div className={styles.completedBadge}>
                          –ö—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω
                        </div>
                        <Link href={`/student/courses/${enrollment.course.id}`} className={styles.reviewButton}>
                          –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã
                        </Link>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {enrollments.length === 0 && (
              <div className={styles.emptyState}>
                <h2>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫—É—Ä—Å–æ–≤</h2>
                <p>–ù–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –≤—ã–±—Ä–∞–≤ –∫—É—Ä—Å –∏–∑ –Ω–∞—à–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞</p>
                <Link href="/courses" className={styles.browseCourses}>
                  –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å–æ–≤
                </Link>
              </div>
            )}
          </>
        )}
      </div>
    </Layout>
  );
}